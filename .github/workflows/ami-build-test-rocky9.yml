name: Test Rocky 9 Build Only

on:
  workflow_dispatch:
    inputs:
      test_reason:
        description: 'Reason for test build'
        required: false
        default: 'Testing rocky9 workflow'
        type: string

env:
  AWS_REGION: ${{ vars.AWS_REGION || 'us-west-2' }}

jobs:
  test-rocky9-build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        with:
          version: "latest"

      - name: Validate Packer template for Rocky 9
        working-directory: vm-images/aws/cloudberry/build/rocky9
        run: |
          echo "Validating Packer template for rocky9"
          packer validate -var "vm_type=cloudberry" -var "os_name=rocky9" main.pkr.hcl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq netcat-openbsd

      - name: Test build Rocky 9 AMI
        working-directory: vm-images/aws/cloudberry/build/rocky9
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          echo "Testing Rocky 9 build: ${{ inputs.test_reason }}"
          echo "Region: ${{ env.AWS_REGION }}"
          chmod +x ../../scripts/packer-build-and-test.sh
          ../../scripts/packer-build-and-test.sh

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rocky9-test-build-${{ github.run_number }}
          path: |
            vm-images/aws/cloudberry/build/rocky9/packer-manifest.json
            vm-images/aws/cloudberry/build/rocky9/goss-test-results-*.xml
          retention-days: 7

      - name: Extract AMI information
        if: success()
        id: ami-info
        working-directory: vm-images/aws/cloudberry/build/rocky9
        run: |
          if [ -f packer-manifest.json ]; then
            AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d':' -f2)
            AMI_NAME=$(aws ec2 describe-images --image-ids $AMI_ID --query "Images[*].Name" --output text --region ${{ env.AWS_REGION }})
            echo "ami-id=$AMI_ID" >> $GITHUB_OUTPUT
            echo "ami-name=$AMI_NAME" >> $GITHUB_OUTPUT
            echo "Built AMI: $AMI_NAME ($AMI_ID)"
          fi

      - name: Build Summary
        if: always()
        run: |
          echo "## Rocky 9 Test Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Test Reason:** ${{ inputs.test_reason }}" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY
          if [ -n "${{ steps.ami-info.outputs.ami-id }}" ]; then
            echo "**AMI ID:** ${{ steps.ami-info.outputs.ami-id }}" >> $GITHUB_STEP_SUMMARY
            echo "**AMI Name:** ${{ steps.ami-info.outputs.ami-name }}" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** ✅ SUCCESS" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** ❌ FAILED - Check logs" >> $GITHUB_STEP_SUMMARY
          fi